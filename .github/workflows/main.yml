name: CI/CD Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build & Deploy to EC2
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout the code from GitHub
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Setup SSH access using ssh-agent
    - name: Setup SSH access using ssh-agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.PRIKEY }}

    # 3. Clean the remote directory on EC2
    - name: Clean remote directory
      run: |
        ssh -T ${{ secrets.SERVERUSER }}@${{ secrets.SERVERIP }} << 'EOF'
          mkdir -p ~/my-website
          cd ~/my-website
          rm -rf *
        EOF

    # 4. Create Dockerfile directly on the EC2 instance
    - name: Create Dockerfile on EC2
      run: |
        ssh -T ${{ secrets.SERVERUSER }}@${{ secrets.SERVERIP }} << 'EOF'
          cat << 'EOF2' > ~/my-website/Dockerfile
          FROM node:18
          WORKDIR /app
          COPY package*.json ./
          RUN npm install
          COPY . .
          EXPOSE 3000
          CMD ["npm", "start"]
          EOF2
        EOF

    # 5. Copy project files to EC2 using SCP
    - name: Upload app files to EC2
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SERVERIP }}
        username: ${{ secrets.SERVERUSER }}
        key: ${{ secrets.PRIKEY }}
        source: "."
        target: "~/my-website"

    # 6. Build and run Docker container on EC2
    - name: Build & Run Docker container
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVERIP }}
        username: ${{ secrets.SERVERUSER }}
        key: ${{ secrets.PRIKEY }}
        script: |
          cd ~/my-website
          sudo docker stop my-website || true
          sudo docker rm my-website || true
          sudo docker build -t my-website .
          sudo docker run -d --name my-website -p 80:3000 my-website
